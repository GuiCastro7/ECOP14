//P2 2024.1
//Questão 1

//painel.h
#ifndef PAINEL_H
    #define PAINEL_H
    void painelnit(void);
    void painielAlarme(int status);
    void painelNivel(int status);

#endif

//painel.c


#include "pic18f4520.h"
#include "painel.h"

void painelInit(void){
    TRISA = 0x00;
    PORTA = 0x00;
}

void painelAlarme(int status){
    if(status > 100){
        BitSet(PORTA, 4);
    }
    else{
        BitClr(PORTA, 4);
    }

void painelNivel(int status){
    if(status == 0){
        BitClr(PORTA, 0);
        BitClr(PORTA, 1);
        BitClr(PORTA, 2);
        BitClr(PORTA, 3);
    }
    if(status >= 25){
        BitSet(PORTA, 0);
    }
    if(status >= 50 )){
        BitSet(PORTA, 1);
    }
    if(status >= 75 ){
        BitSet(PORTA, 2);
    }
    if(status >= 100){
        BitSet(PORTA, 3);
    }
}


//Questao 2

#include "pic18f4520.h"
#include "pwm.h"
#include "adc.h"
#include "config.h"

void main(void) {
    pwmInit();
    pwmFrequency(1000);
    adcInit();
    BitSet(TRISA, 3);
    unsigned int ValorAD;

    for (;;) {
        ValorAD = adcRead();

        if (BitTst(PORTA, 3)){
            pwmSet1(100);
        } else {
            pwmSet1(ValorAD*100*3,3/1023);   
          }
    }
}


//Questao 3
#include "pic18f4520.h"
#include "config.h"
#include "lcd.h"
#include "serial.h"


void main(void) {
lcdInit();
serialInit();
BitSet(TRISA,0);
PORTA = 0X00;

unsigned int cont = 0;

    for(;;){
        lcdCommand(0x80);
        if(BitTst(PORTA,0)){
            cont++;
            while(BitTst(PORTA, 0));
        }
        lcdData(((cont/1000) %10)+ 48); //Milhares
        lcdData(((cont/100) %10)+ 48); //Centenas
        lcdData(((cont/10) %10)+ 48); //Dezenas
        lcdData((cont % 10) + 48); //Unidades
        
        serialSend((cont/1000) %10);
        serialSend((cont/100) %10);
        serialSend((cont/10) %10);
        serialSend(cont % 10);
        
        if(cont == 10000){ //Capacidade máxima, ele zera o contador.
            cont = 0;
        }
    }
}


//Questão 4

#include "pic18f4520.h"
#include "config.h"
#include "ssd.h"
#include "timer.h"

char flag;

void Int(void) __interrupt() {
    if (BitTst(INTCON, 2)) {
        timerReset(1000);
        BitClr(INTCON, 2);
        flag = 1;
    }
}

void main(void) {
    unsigned int conta, contb, ms, seg, min;

    timerInit();
    ssdInit();
    BitSet(TRISA, 0);
    BitSet(TRISA, 1);
    BitSet(TRISA, 2);

    for (;;) {
        ssdUpdate();
        if (BitTst(PORTA, 1)) {
            conta++;
            ssdDigit((conta), 0);
        }
        if (BitTst(PORTA, 2)) {
            contb++;
            ssdDigit((contb), 1);
        }

            while(!flag);
            flag = 0;
            ms++;
            if (ms == 1000) {
                seg++;
                ms = 0;

                if (seg == 60) {
                    min++;
                    seg = 0;
                    ssdDigit((min % 10), 2);

                    ssdDigit(((min / 10) % 10), 3);

                }
            }


            if (bitTst(PORTA, 0)) {
                ms = 0;
                seg = 0;
                min = 0;

            }

        



    }
}
