//Parte 3 da aula

#include "config.h"
#include "pic18f4520.h"
#include "ssd.h"
#include "keypad.h"

void main(void) {
    char i = 0;
    unsigned char tecla;
    ssdInit();
    kpInit();
    for (;;) {
        ssdUpdate();
        kpDebounce();
        tecla = kpRead();
        for (i = 0; i < 8; i++) {
            if (BitTst(tecla, i)) {
                ssdDigit(kpRead(), 0); //Trocou o i pelo kpRead() somente
            }
        }
  

//Parte 4 da aula 

//main.c 
#include "config.h"
#include "pic18f4520.h"
#include "ssd.h"
#include "keypad.h"

void main(void) {
    unsigned char tecla = 0;
    unsigned char tecla_anterior = 0;
    unsigned char contador = 0;
    
    ssdInit();
    kpInit();
    
    for (;;) {
        ssdUpdate();
        kpDebounce();
        tecla = kpRead();
        
        if(tecla != 0 && tecla_anterior == 0){
            contador++;
            if (contador > 99){
                contador = 0;
            }
        } 
        
        tecla_anterior = tecla;
        
        ssdDigit(contador / 10, 3);
        ssdDigit(contador % 10, 2);
        
        if(tecla != 0){
            ssdDigit(tecla, 0);
        }
        else {
            ssdDigit(kpRead(), 0);
        }         
    } 
}

//keypad.c //Parte do kpRead()
unsigned char kpRead(void) {
    switch (valor) {
        case 0x01:
            return 0x0A;
            break;
        case 0x02:
            return 0x0B;
            break;  
        case 0x04:
            return 0x03;
            break;
        case 0x08:
            return 0x06;
            break;
        case 0x10:
            return 0x02;
            break;  
        case 0x20:
            return 0x05;
            break;
        case 0x40:
            return 0x01;
            break;
        case 0x80:
            return 0x04;
            break;    
            default:
                return 0x00;
                break;
    }
}
